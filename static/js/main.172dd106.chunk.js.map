{"version":3,"sources":["api.js","utils/useWidth.js","components/Header.js","components/Footer.js","pages/Viewer.js","pages/Broadcast.js","pages/EventList.js","App.js","serviceWorker.js","index.js"],"names":["toJson","res","a","json","js","ok","Error","message","getAllEvent","fetch","process","credentials","resp","isUseWidth","h","w","useStyles","makeStyles","theme","root","flexGrow","eventList","color","textDecoration","eventListButton","marginLeft","Header","classes","className","AppBar","position","Toolbar","variant","to","Typography","backgroundColor","width","height","display","justifyContent","alignItems","Footer","wrapper","flexDirection","minHeight","eventInfo","margin","action","maxWidth","padding","messageField","messageButton","marginBottom","nicoJSLib","require","peer","Peer","key","Viewer","useWidth","useHeight","remoteVideo","useParams","event_id","useRef","useState","room","setRoom","nicoJS","setNicoJS","setNumPeople","setMessage","isDisplayComment","setIsDisplayComment","isViewing","setIsViewing","Date","lastSnedMsgTime","setLastSnedMsgTime","innerWidth","window","innerHeight","flowSpeed","displayHandle","document","getElementById","style","videoWrapScreen","id","Object","assign","video","autoPlay","playsInline","ref","Button","onClick","close","sfuRoom","joinRoom","mode","on","remoteStream","current","srcObject","peerId","members","length","nico","app","font_size","speed","listen","src","data","console","log","send","text","TextField","value","onChange","e","target","label","alert","now","getTime","screen","textAlign","camera","bottom","right","playBtn","left","marginTop","commentBtn","transform","Broadcast","localVideo","event","setMode","isBroadcasting","setIsBroadcasting","muted","Fab","aria-label","prev","cameraMode","navigator","mediaDevices","getUserMedia","ideal","facingMode","audio","then","stream","replaceStream","gutterBottom","component","company","name","start_time","title","card","media","introduction","withRouter","props","React","events","setEvents","useEffect","catch","rep","map","Card","CardActionArea","history","push","CardMedia","image","image_url","CardContent","substr","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.172dd106.chunk.js","sourcesContent":["const API_ENDPOINT = process.env.REACT_APP_BACKEND_API_BASE;\n\nconst toJson = async (res) => {\n  const js = await res.json();\n  if (res.ok) {\n    return js;\n  } else {\n    throw new Error(js.message);\n  }\n};\n\nexport const getEvent = async (event_id) => {\n  const resp = await fetch(`${API_ENDPOINT}/api/v1/event/${event_id}`, {\n    credentials: \"same-origin\",\n  });\n  return await toJson(resp);\n};\n\nexport const getAllEvent = async () => {\n  const resp = await fetch(`${API_ENDPOINT}/api/v1/event`, {\n    credentials: \"same-origin\",\n  });\n  return await toJson(resp);\n};\n","export const isUseWidth = (h, w) => {\n  if (h / w > 9 / 16) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const STANDARD_WIDTH = 16;\nexport const STANDARD_HEIGHT = 9;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  eventList: {\n    color: \"#fff\",\n    textDecoration: \"none\",\n  },\n  eventListButton: {\n    color: \"#fff\",\n    marginLeft: 8,\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Link to=\"/skyway-try\" className={classes.eventList}>\n            <Typography variant=\"h6\" color=\"inherit\">\n              skyway-try\n            </Typography>\n          </Link>\n          {/* <Link to=\"/event\" className={classes.eventList}> */}\n          {/* <Button className={classes.eventListButton}>skyway-try</Button> */}\n          {/* </Link> */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#ddd\",\n    width: \"100%\",\n    height: 100,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <small>&copy; サイファー滋賀埼玉 a.k.a 内陸 All Rights Reserved</small>\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { useEffect } from \"react\";\nimport Peer from \"skyway-js\";\nimport { useState, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport SpeakerNotesIcon from \"@material-ui/icons/SpeakerNotes\";\nimport SpeakerNotesOffIcon from \"@material-ui/icons/SpeakerNotesOff\";\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { useParams } from \"react-router-dom\";\nimport { getEvent } from \"../api\";\nimport { isUseWidth, STANDARD_HEIGHT, STANDARD_WIDTH } from \"../utils/useWidth\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport \"../css/broadcast.css\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    height: \"100%\",\n    minHeight: \"100vh\",\n  },\n  eventInfo: {\n    margin: \"24px 0\",\n  },\n  action: {\n    width: \"100%\",\n    maxWidth: \"1200px\",\n    display: \"flex\",\n    padding: 4,\n    margin: \"0 auto\",\n  },\n  messageField: {\n    backgroundColor: \"#fff\",\n    width: \"100%\",\n    margin: \"0 4px\",\n  },\n  messageButton: {\n    marginLeft: 8,\n  },\n  root: {\n    marginBottom: 64,\n  },\n});\n\nconst MAX_LENGTH = 25;\n\nconst nicoJSLib = require(\"nicojs\");\nconst peer = new Peer({ key: process.env.REACT_APP_SKYWAY_API_KEY });\n\nconst Viewer = () => {\n  const classes = useStyles();\n  const { event_id } = useParams();\n  const remoteVideo = useRef(null);\n  const [room, setRoom] = useState(null);\n  const [nicoJS, setNicoJS] = useState(null);\n  const [companyName, setCompanyName] = useState(null);\n  const [startTime, setStartTime] = useState(null);\n  const [numPeople, setNumPeople] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [isDisplayComment, setIsDisplayComment] = useState(true);\n  const [isViewing, setIsViewing] = useState(false);\n  const [lastSnedMsgTime, setLastSnedMsgTime] = useState(\n    new Date(\"2020/01/01 00:00:00\")\n  );\n\n  const innerWidth = window.innerWidth;\n  const innerHeight = window.innerHeight;\n\n  // 画面幅からビデオ幅を決定\n  let useWidth;\n  let useHeight;\n  if (isUseWidth(innerHeight, innerWidth)) {\n    useWidth = innerWidth;\n    useHeight = (innerWidth * STANDARD_HEIGHT) / STANDARD_WIDTH;\n  } else {\n    useHeight = innerHeight;\n    useWidth = (innerHeight * STANDARD_WIDTH) / STANDARD_HEIGHT;\n  }\n\n  // コメントの流す速さも決定, 3秒で流す想定\n  const flowSpeed = useWidth / 80;\n\n  // useEffect(() => {\n  //   const rep = async () => {\n  //     const response = await getEvent(event_id).catch((e) => {\n  //       console.log(e.message);\n  //     });\n  //     setCompanyName(response.company.name);\n  //     setStartTime(response.start_time);\n  //   };\n  //   rep();\n  // }, []);\n\n  const joinRoom = () => {\n    const sfuRoom = peer.joinRoom(\"test\", {\n      mode: \"sfu\",\n    });\n    setRoom(sfuRoom);\n    sfuRoom.on(\"stream\", (remoteStream) => {\n      remoteVideo.current.srcObject = remoteStream;\n      // 退室者が発生した\n      sfuRoom.on(\"peerLeave\", (peerId) => {\n        if (peerId === remoteStream.peerId) {\n          sfuRoom.close();\n          setNumPeople(0);\n          remoteVideo.current.srcObject = null;\n          // TODO: 配信終了しましたみないな画像？を表示したい\n        } else {\n          setNumPeople(sfuRoom.members.length);\n        }\n      });\n    });\n\n    const nico = new nicoJSLib({\n      app: document.getElementById(\"screen\"),\n      width: useWidth,\n      height: useHeight,\n      font_size: 36,\n      speed: 8,\n      color: \"#fff\",\n    });\n    setNicoJS(nico);\n    nico.listen();\n\n    // コメントを受信した時に実行\n    sfuRoom.on(\"data\", ({ src, data }) => {\n      console.log(src, data);\n\n      // 25文字以上のコメントを弾く\n      if (data.length < MAX_LENGTH) {\n        nico.send({ text: data, speed: flowSpeed });\n      }\n    });\n\n    // 新しい人が参加した時\n    sfuRoom.on(\"peerJoin\", (peerId) => {\n      setNumPeople(sfuRoom.members.length);\n    });\n\n    // 参加したタイミング\n    sfuRoom.on(\"open\", () => {\n      setNumPeople(sfuRoom.members.length);\n    });\n\n    setIsViewing(true);\n  };\n\n  const displayHandle = () => {\n    if (isDisplayComment) {\n      document.getElementById(\"screen\").style.display = \"none\";\n      setIsDisplayComment(false);\n    } else {\n      document.getElementById(\"screen\").style.display = \"block\";\n      setIsDisplayComment(true);\n    }\n  };\n\n  const handleChangeMessage = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const sendMessage = () => {\n    if (message.length > MAX_LENGTH) {\n      alert(\"25文字以内で入力してください。\");\n      return;\n    }\n    if (room === null) {\n      return;\n    }\n    const now = new Date();\n    const diffTime = (now.getTime() - lastSnedMsgTime.getTime()) / 1000;\n    if (diffTime < 5) {\n      alert(\"数秒お待ち下さい\");\n      return;\n    }\n    room.send(message);\n    document.getElementById(\"standard-basic\").value = null;\n    nicoJS.send({ text: message, speed: flowSpeed, color: \"#ff0000\" });\n    setMessage(\"\");\n    setLastSnedMsgTime(now);\n  };\n\n  const leaveRoom = () => {\n    if (room != null) {\n      room.close();\n      setIsViewing(false);\n      setRoom(null);\n    }\n  };\n\n  const videoWrapScreen = { width: useWidth + \"px\", height: useHeight + \"px\" };\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.root}>\n        {/* <Header /> */}\n        {/* <div className={classes.eventInfo}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            会社名：{companyName}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            開始時間：{startTime}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            視聴人数：{numPeople}\n          </Typography>\n        </div> */}\n        <div\n          id=\"video-screen\"\n          style={\n            room\n              ? videoWrapScreen\n              : Object.assign(videoWrapScreen, { backgroundColor: \"#aaa\" })\n          }\n        >\n          <video\n            id=\"video\"\n            className={classes.video}\n            width={useWidth + \"px\"}\n            height={useHeight + \"px\"}\n            autoPlay\n            playsInline\n            ref={remoteVideo}\n          ></video>\n          <div id=\"comment-screen-wrap\">\n            <div id=\"screen\"></div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          {isViewing ? (\n            <Button onClick={leaveRoom} variant=\"contained\" color=\"primary\">\n              <PauseCircleOutlineIcon />\n            </Button>\n          ) : (\n            <Button onClick={joinRoom} variant=\"contained\" color=\"primary\">\n              <PlayCircleOutlineIcon />\n            </Button>\n          )}\n          <TextField\n            className={classes.messageField}\n            value={message}\n            onChange={handleChangeMessage}\n            id=\"standard-basic\"\n            label=\"コメント(25文字以内)\"\n          />\n          <Button onClick={sendMessage} variant=\"contained\" color=\"primary\">\n            <TelegramIcon />\n          </Button>\n          {isDisplayComment ? (\n            <Button\n              className={classes.messageButton}\n              onClick={displayHandle}\n              variant=\"contained\"\n              color=\"primary\"\n              id=\"commentDisplayButton\"\n            >\n              <SpeakerNotesOffIcon />\n            </Button>\n          ) : (\n            <Button\n              className={classes.messageButton}\n              onClick={displayHandle}\n              variant=\"contained\"\n              color=\"primary\"\n              id=\"commentDisplayButton\"\n            >\n              <SpeakerNotesIcon className={classes.messageButton} />\n            </Button>\n          )}\n        </div>\n      </div>\n      {/* <Footer /> */}\n    </div>\n  );\n};\n\nexport default Viewer;\n","import React from \"react\";\nimport Peer from \"skyway-js\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport FlipCameraIosIcon from \"@material-ui/icons/FlipCameraIos\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport { useParams } from \"react-router-dom\";\nimport { getEvent } from \"../api\";\nimport { isUseWidth, STANDARD_HEIGHT, STANDARD_WIDTH } from \"../utils/useWidth\";\nimport \"../css/broadcast.css\";\n\nconst nicoJSLib = require(\"nicojs\");\nconst peer = new Peer({ key: \"0e95c6b0-edb4-4681-a1ea-0b948bccb9dc\" });\n\n// css for material-ui\nconst useStyles = makeStyles({\n  screen: {\n    position: \"relative\",\n    textAlign: \"center\",\n  },\n  camera: {\n    position: \"absolute\",\n    bottom: 3,\n    right: 3,\n  },\n  playBtn: {\n    position: \"absolute\",\n    bottom: 3,\n    left: 3,\n  },\n  eventInfo: {\n    marginTop: 24,\n  },\n  commentBtn: {\n    position: \"absolute\",\n    left: \"50%\",\n    bottom: 6,\n    transform: \"translateX(-50%)\",\n  },\n});\n\nconst Broadcast = () => {\n  const classes = useStyles();\n  const { event_id } = useParams();\n  const localVideo = useRef(null);\n  const [room, setRoom] = useState(null);\n  const [event, setEvent] = useState(null);\n  const [mode, setMode] = useState(true);\n  const [isDisplayComment, setIsDisplayComment] = useState(true);\n  const [isBroadcasting, setIsBroadcasting] = useState(false);\n\n  const innerWidth = window.innerWidth;\n  const innerHeight = window.innerHeight;\n\n  // 画面幅からビデオ幅を決定\n  let useWidth;\n  let useHeight;\n  if (isUseWidth(innerHeight, innerWidth)) {\n    useWidth = innerWidth;\n    useHeight = (innerWidth * STANDARD_HEIGHT) / STANDARD_WIDTH;\n  } else {\n    useHeight = innerHeight;\n    useWidth = (innerHeight * STANDARD_WIDTH) / STANDARD_HEIGHT;\n  }\n\n  // useEffect(() => {\n  //   const rep = async () => {\n  //     const response = await getEvent(event_id).catch((e) => {\n  //       console.log(e.message);\n  //     });\n  //     setEvent(response);\n  //   };\n  //   rep();\n  // }, []);\n  const id = 1;\n  const makeRoom = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: {\n          width: { ideal: 640 },\n          height: { ideal: 360 },\n          facingMode: mode ? \"environment\" : \"user\",\n        },\n        audio: true,\n      })\n      .then((stream) => {\n        localVideo.current.srcObject = stream;\n        const sfuRoom = peer.joinRoom(\"test\", {\n          mode: \"sfu\",\n          stream: stream,\n        });\n        setRoom(sfuRoom);\n\n        const nico = new nicoJSLib({\n          app: document.getElementById(\"screen\"),\n          width: useWidth,\n          height: useHeight,\n          font_size: 36,\n          speed: 8,\n          color: \"#fff\",\n        });\n        nico.listen();\n\n        // コメントを受信した時に実行\n        sfuRoom.on(\"data\", ({ src, data }) => {\n          console.log(src, data);\n          const flowSpeed = useWidth / 80; // 3秒で流す想定\n          nico.send({ text: data, speed: flowSpeed });\n        });\n      });\n\n    setIsBroadcasting(true);\n  };\n\n  const displayHandle = () => {\n    if (isDisplayComment) {\n      document.getElementById(\"screen\").style.display = \"none\";\n      setIsDisplayComment(false);\n    } else {\n      document.getElementById(\"screen\").style.display = \"block\";\n      setIsDisplayComment(true);\n    }\n  };\n\n  const stopBroadcast = () => {\n    if (room != null) {\n      room.close();\n      localVideo.current.srcObject = null;\n      setRoom(null);\n      // TODO: 配信終了しましたみたいな画像？を表示したい\n\n      setIsBroadcasting(false);\n    }\n  };\n\n  const changeCameraMode = () => {\n    setMode((prev) => !prev);\n    const cameraMode = !mode;\n    navigator.mediaDevices\n      .getUserMedia({\n        video: {\n          width: { ideal: 640 },\n          height: { ideal: 360 },\n          facingMode: cameraMode ? \"environment\" : \"user\",\n        },\n        audio: true,\n      })\n      .then((stream) => {\n        room.replaceStream(stream);\n        localVideo.current.srcObject = stream;\n      });\n  };\n  const videoWrapScreen = { width: useWidth + \"px\", height: useHeight + \"px\" };\n\n  return (\n    <div>\n      <div\n        id=\"video-screen\"\n        className={classes.screen}\n        style={\n          isBroadcasting\n            ? videoWrapScreen\n            : Object.assign(videoWrapScreen, { backgroundColor: \"#aaa\" })\n        }\n      >\n        <video\n          id=\"video\"\n          width={useWidth + \"px\"}\n          height={useHeight + \"px\"}\n          autoPlay\n          muted\n          playsInline\n          ref={localVideo}\n        ></video>\n\n        <div id=\"comment-screen-wrap\">\n          <div id=\"screen\"></div>\n        </div>\n\n        {room !== null ? (\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={changeCameraMode}\n            className={classes.camera}\n          >\n            <FlipCameraIosIcon />\n          </Fab>\n        ) : (\n          \"\"\n        )}\n      </div>\n      {!isBroadcasting ? (\n        <Fab color=\"primary\" className={classes.playBtn} onClick={makeRoom}>\n          <PlayCircleOutlineIcon />\n        </Fab>\n      ) : (\n        <Fab\n          color=\"secondary\"\n          className={classes.playBtn}\n          onClick={stopBroadcast}\n        >\n          <PauseCircleOutlineIcon />\n        </Fab>\n      )}\n      {isDisplayComment ? (\n        <Button\n          onClick={displayHandle}\n          variant=\"contained\"\n          color=\"secondary\"\n          id=\"commentDisplayButton\"\n          className={classes.commentBtn}\n        >\n          コメント非表示\n        </Button>\n      ) : (\n        <Button\n          onClick={displayHandle}\n          variant=\"contained\"\n          color=\"primary\"\n          id=\"commentDisplayButton\"\n          className={classes.commentBtn}\n        >\n          コメント表示\n        </Button>\n      )}\n      {event !== null && (\n        <div className={classes.eventInfo}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            会社名：{event.company.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            開始時間：{event.start_time}\n          </Typography>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Broadcast;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { getAllEvent } from \"../api\";\nimport { withRouter } from \"react-router\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    height: \"100%\",\n    minHeight: \"100vh\",\n  },\n  title: {\n    marginTop: 32,\n  },\n  card: {\n    maxWidth: 600,\n    margin: \"40px auto\",\n  },\n  media: {\n    height: 280,\n  },\n  introduction: {\n    marginTop: 24,\n  },\n});\n\nconst MAX_LENGTH = 99;\n\nconst EventList = (props) => {\n  const classes = useStyles();\n  const [events, setEvents] = React.useState([]);\n\n  React.useEffect(() => {\n    const rep = async () => {\n      const res = await getAllEvent().catch((e) => {\n        console.log(e.message);\n      });\n      setEvents(res);\n    };\n    rep();\n  }, []);\n\n  const handleToEventPage = (id) => {\n    props.history.push(`/event/${id}`);\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.root}>\n        <Header />\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\n          視聴開始\n        </Typography>\n        {events.map((event) => (\n          <Card className={classes.card} key={event.id}>\n            <CardActionArea onClick={() => handleToEventPage(event.id)}>\n              <CardMedia\n                className={classes.media}\n                image={event.image_url}\n                title=\"Contemplative Reptile\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {event.company.name}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  開催時間：{event.start_time}\n                </Typography>\n                <Typography\n                  className={classes.introduction}\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  component=\"p\"\n                >\n                  {event.introduction.length > MAX_LENGTH\n                    ? event.introduction.substr(0, MAX_LENGTH) + \"...\"\n                    : event.introduction}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        ))}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default withRouter(EventList);\n","import React from \"react\";\nimport \"./App.css\";\nimport Viewer from \"./pages/Viewer\";\nimport Broadcast from \"./pages/Broadcast\";\nimport Event from \"./pages/Event\";\nimport EventList from \"./pages/EventList\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {/* <Route exact path=\"/event/:event_id\"> */}\n          {/* <Event /> */}\n          {/* </Route> */}\n          <Route exact path=\"/broadcast\">\n            <Broadcast />\n          </Route>\n          <Route exact path=\"/viewer\">\n            <Viewer />\n          </Route>\n          <Route path=\"/\">\n            <Viewer />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}